{"version":3,"sources":["components/Container/Container.js","redux/actions.js","redux/types.js","redux/selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducers.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Container","children","className","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","target","value","resetInput","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","error","info","type","onChange","placeholder","Filter","actions","ContactList","visibleContacts","map","onClick","App","autoClose","Component","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.705fbdc1.chunk.js","sourcesContent":["import T from 'prop-types';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Container;","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { ADD, DELETE, CHANGE_FILTER } from './types';\r\n\r\nexport const addContact = createAction(ADD, (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction(DELETE);\r\n\r\nexport const changeFilter = createAction(CHANGE_FILTER);\r\n\r\nexport default { addContact, deleteContact, changeFilter };","export const ADD = 'contacts/add';\r\nexport const DELETE = 'contacts/delete';\r\nexport const CHANGE_FILTER = 'todos/changeFilter';\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(\r\n    ({ name }) =>\r\n      name && name.toLowerCase && name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\nimport { toast } from 'react-toastify';\n\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(` ${name}' is already in use `);\n    } else if (checkRepeatNumber(number)) {\n      toast(` ${number} is already in use `);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(' Enter the correct name and number ');\n    } else if (checkValidNumber(number)) {\n      toast.error(' Enter the correct phone number ');\n    } else {\n      dispatch(addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              placeholder=\"Andrey Kovsh\"\n            />\n          </label>\n          <label>\n            Phone number\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              placeholder=\"817-18-41\"\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n\n// import { useState } from 'react';\n\n// function Form({ onSubmit }) {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   const handleChange = event => {\n//     const { name, value } = event.target;\n\n//     switch (name) {\n//       case 'name':\n//         setName(value);\n//         break;\n//       case 'number':\n//         setNumber(value);\n//         break;\n//       default:\n//         return;\n//     }\n//   };\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     onSubmit(name, number);\n\n//     resetInput();\n//   };\n//   const resetInput = () => {\n//     setName('');\n//     setNumber('');\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>\n//             Name\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               value={name}\n//               onChange={handleChange}\n//               placeholder=\"Andrey Kovsh\"\n//             />\n//           </label>\n//           <label>\n//             Phone number\n//             <input\n//               type=\"text\"\n//               name=\"number\"\n//               value={number}\n//               onChange={handleChange}\n//               placeholder=\"817-18-41\"\n//             />\n//           </label>\n//           <button type=\"submit\">Add contact</button>\n//         </div>\n//       </form>\n//     </>\n//   );\n// }\n\n// export default Form;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\n\nexport default function Filter() {\n    \n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const change = e => dispatch(actions.changeFilter(e.target.value));\n  \n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={change} />\n    </label>\n  )   \n\n}\n\n// import React from 'react';\n\n// const Filter = ({ value, onChange }) => (\n//   <label>\n//     Find contacts by name\n//     <input type=\"text\" value={value} onChange={onChange} />\n//   </label>\n// );\n\n// export default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            <b>{name} </b>\n            <em>{number}</em>\n          </p>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n// function ContactList({ contacts, onDeleteContact }) {\n//   return (\n//     <ul>\n//       {contacts.map(({ id, name, number }) => (\n//         <li key={id}>\n//           <p>\n//             <b>{name} </b>\n\n//             <em>{number}</em>\n//           </p>\n//           <button type=\"button\" onClick={() => onDeleteContact(id)}>\n//             Удалить\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default ContactList;\n","import { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter.js';\nimport ContactList from './components/ContactList/ContactList';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n        <ToastContainer autoClose={5000} />\n      </Container>\n    );\n  }\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport types from './types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}